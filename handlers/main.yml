---
- name: Daemon reload
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable postgresql service
  ansible.builtin.systemd:
    name: "{{ pgsql_systemd_service }}"
    enabled: yes

- name: Start postgresql service
  ansible.builtin.systemd:
    name: "{{ pgsql_systemd_service }}"
    state: started

- name: Stop postgresql service
  ansible.builtin.systemd:
    name: "{{ pgsql_systemd_service }}"
    state: stopped

- name: Restart postgresql service
  ansible.builtin.systemd:
    name: "{{ pgsql_systemd_service }}"
    state: restarted

- name: Enable disable-thp service
  ansible.builtin.systemd:
    name: "disable-thp.service"
    enabled: yes

- name: Start disable-thp service
  ansible.builtin.systemd:
    name: "disable-thp.service"
    state: started

- name: Enable postgresql exporter service
  ansible.builtin.systemd:
    name: "postgres_exporter.service"
    enabled: yes

- name: Restart postgresql exporter service
  ansible.builtin.systemd:
    name: "postgres_exporter.service"
    state: restarted

- name: Reload pg_hba.conf
  community.postgresql.postgresql_query:
    query: "SELECT pg_reload_conf();"
    db: postgres
    login_host: localhost
    login_user: postgres
    login_unix_socket: "{{ unix_socket_directories }}"
    port: "{{ port }}"
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
    ansible_python_interpreter: /usr/bin/python3
